version: '3.8'

services:
  # Next.js 应用服务
  next-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: inventory_next_app
    ports:
      - "3000:3000" # 将容器的3000端口映射到主机的3000端口
    volumes:
      - .:/app # 将当前目录挂载到容器的 /app 目录，实现代码热更新
      - /app/node_modules # 匿名卷，防止本地 node_modules 覆盖容器内的
      - /app/.next # 匿名卷，用于 Next.js 的构建输出
    environment:
      - NODE_ENV=development
      # PostgreSQL 连接信息
      - DATABASE_URL=postgresql://user:password@db:5432/inventory_db
      # 确保Material UI依赖安装
      - FORCE_INSTALL_MUI=true
    depends_on:
      - db # 确保 db 服务先启动
    networks:
      - inventory_network
    restart: unless-stopped

  # PostgreSQL 数据库服务
  db:
    image: postgres:15
    container_name: inventory_postgres_db
    ports:
      - "15432:5432" # 使用15432端口避免冲突
    environment:
      POSTGRES_USER: user # 数据库用户名
      POSTGRES_PASSWORD: password # 数据库密码
      POSTGRES_DB: inventory_db # 数据库名称
    volumes:
      - postgres_data:/var/lib/postgresql/data # 持久化数据库数据
      - ./db_init_scripts:/docker-entrypoint-initdb.d
    networks:
      - inventory_network
    restart: unless-stopped

volumes:
  postgres_data: 

networks:
  inventory_network:
    driver: bridge